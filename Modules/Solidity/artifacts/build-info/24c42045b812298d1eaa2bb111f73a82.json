{
	"id": "24c42045b812298d1eaa2bb111f73a82",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Modules/Solidity/76. Assembly Binary Exponentiation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\ncontract AssemblyBinExp {\n    // Binary exponentiation to calculate x**n\n    function rpow(uint256 x, uint256 n, uint256 b)\n        public\n        pure\n        returns (uint256 z)\n    {\n        assembly {\n            switch x\n            // x = 0\n            case 0 {\n                switch n\n                // n = 0 --> x**n = 0**0 --> 1\n                case 0 { z := b }\n                // n > 0 --> x**n = 0**n --> 0\n                default { z := 0 }\n            }\n            default {\n                switch mod(n, 2)\n                // x > 0 and n is even --> z = 1\n                case 0 { z := b }\n                // x > 0 and n is odd --> z = x\n                default { z := x }\n\n                let half := div(b, 2) // for rounding.\n                // n = n / 2, while n > 0, n = n / 2\n                for { n := div(n, 2) } n { n := div(n, 2) } {\n                    let xx := mul(x, x)\n                    // Check overflow - revert if xx / x != x\n                    if iszero(eq(div(xx, x), x)) { revert(0, 0) }\n                    // Round (xx + half) / b\n                    let xxRound := add(xx, half)\n                    // Check overflow - revert if xxRound < xx\n                    if lt(xxRound, xx) { revert(0, 0) }\n                    x := div(xxRound, b)\n                    // if n % 2 == 1\n                    if mod(n, 2) {\n                        let zx := mul(z, x)\n                        // revert if x != 0 and zx / x != z\n                        if and(iszero(iszero(x)), iszero(eq(div(zx, x), z))) {\n                            revert(0, 0)\n                        }\n                        // Round (zx + half) / b\n                        let zxRound := add(zx, half)\n                        // Check overflow - revert if zxRound < zx\n                        if lt(zxRound, zx) { revert(0, 0) }\n                        z := div(zxRound, b)\n                    }\n                }\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Modules/Solidity/76. Assembly Binary Exponentiation.sol": {
				"AssemblyBinExp": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "rpow",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "z",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":57:2008  contract AssemblyBinExp {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":57:2008  contract AssemblyBinExp {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67b870af\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":134:2006  function rpow(uint256 x, uint256 n, uint256 b)... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":226:235  uint256 z */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":281:282  x */\n      dup4\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":321:322  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":316:526  case 0 {... */\n      dup2\n      eq\n      tag_12\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":579:580  2 */\n      0x02\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":576:577  n */\n      dup5\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":572:581  mod(n, 2) */\n      mod\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":652:653  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":647:664  case 0 { z := b } */\n      dup2\n      eq\n      tag_14\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":744:745  x */\n      dup6\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":739:745  z := x */\n      swap3\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":565:747  switch mod(n, 2)... */\n      jump(tag_13)\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":647:664  case 0 { z := b } */\n    tag_14:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":661:662  b */\n      dup4\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":656:662  z := b */\n      swap3\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":565:747  switch mod(n, 2)... */\n    tag_13:\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":784:785  2 */\n      0x02\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":781:782  b */\n      dup4\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":777:786  div(b, 2) */\n      div\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":891:892  2 */\n      0x02\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":888:889  n */\n      dup6\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":884:893  div(n, 2) */\n      div\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":879:893  n := div(n, 2) */\n      swap5\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":873:1976  for { n := div(n, 2) } n { n := div(n, 2) } {... */\n    tag_15:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":896:897  n */\n      dup5\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":873:1976  for { n := div(n, 2) } n { n := div(n, 2) } {... */\n      iszero\n      tag_17\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":956:957  x */\n      dup6\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":953:954  x */\n      dup7\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":949:958  mul(x, x) */\n      mul\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1066:1067  x */\n      dup7\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1062:1063  x */\n      dup8\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1058:1060  xx */\n      dup3\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1054:1064  div(xx, x) */\n      div\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1051:1068  eq(div(xx, x), x) */\n      eq\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1041:1086  if iszero(eq(div(xx, x), x)) { revert(0, 0) } */\n      tag_18\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1082:1083  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1079:1080  0 */\n      dup1\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1072:1084  revert(0, 0) */\n      revert\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1041:1086  if iszero(eq(div(xx, x), x)) { revert(0, 0) } */\n    tag_18:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1175:1179  half */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1171:1173  xx */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1167:1180  add(xx, half) */\n      add\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1279:1281  xx */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1270:1277  xxRound */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1267:1282  lt(xxRound, xx) */\n      lt\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1264:1299  if lt(xxRound, xx) { revert(0, 0) } */\n      iszero\n      tag_19\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1295:1296  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1292:1293  0 */\n      dup1\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1285:1297  revert(0, 0) */\n      revert\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1264:1299  if lt(xxRound, xx) { revert(0, 0) } */\n    tag_19:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1338:1339  b */\n      dup6\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1329:1336  xxRound */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1325:1340  div(xxRound, b) */\n      div\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1320:1340  x := div(xxRound, b) */\n      swap8\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1408:1409  2 */\n      0x02\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1405:1406  n */\n      dup8\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1401:1410  mod(n, 2) */\n      mod\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1398:1958  if mod(n, 2) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1454:1455  x */\n      dup8\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1451:1452  z */\n      dup6\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1447:1456  mul(z, x) */\n      mul\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1589:1590  z */\n      dup6\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1585:1586  x */\n      dup10\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1581:1583  zx */\n      dup3\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1577:1587  div(zx, x) */\n      div\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1574:1591  eq(div(zx, x), z) */\n      eq\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1567:1592  iszero(eq(div(zx, x), z)) */\n      iszero\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1562:1563  x */\n      dup10\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1555:1564  iszero(x) */\n      iszero\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1548:1565  iszero(iszero(x)) */\n      iszero\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1544:1593  and(iszero(iszero(x)), iszero(eq(div(zx, x), z))) */\n      and\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1541:1662  if and(iszero(iszero(x)), iszero(eq(div(zx, x), z))) {... */\n      iszero\n      tag_21\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1634:1635  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1631:1632  0 */\n      dup1\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1624:1636  revert(0, 0) */\n      revert\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1541:1662  if and(iszero(iszero(x)), iszero(eq(div(zx, x), z))) {... */\n    tag_21:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1759:1763  half */\n      dup4\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1755:1757  zx */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1751:1764  add(zx, half) */\n      add\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1871:1873  zx */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1862:1869  zxRound */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1859:1874  lt(zxRound, zx) */\n      lt\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1856:1891  if lt(zxRound, zx) { revert(0, 0) } */\n      iszero\n      tag_22\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1887:1888  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1884:1885  0 */\n      dup1\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1877:1889  revert(0, 0) */\n      revert\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1856:1891  if lt(zxRound, zx) { revert(0, 0) } */\n    tag_22:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1934:1935  b */\n      dup8\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1925:1932  zxRound */\n      dup2\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1921:1936  div(zxRound, b) */\n      div\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1916:1936  z := div(zxRound, b) */\n      swap7\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1411:1958  {... */\n      pop\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":1398:1958  if mod(n, 2) {... */\n    tag_20:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":917:1976  {... */\n      pop\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":912:913  2 */\n      0x02\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":909:910  n */\n      dup6\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":905:914  div(n, 2) */\n      div\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":900:914  n := div(n, 2) */\n      swap5\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":873:1976  for { n := div(n, 2) } n { n := div(n, 2) } {... */\n      jump(tag_15)\n    tag_17:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":547:1990  {... */\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":274:1990  switch x... */\n      jump(tag_11)\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":316:526  case 0 {... */\n    tag_12:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":348:349  n */\n      dup4\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":418:419  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":413:430  case 0 { z := b } */\n      dup2\n      eq\n      tag_24\n      jumpi\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":509:510  0 */\n      0x00\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":504:510  z := 0 */\n      swap3\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":341:512  switch n... */\n      jump(tag_23)\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":413:430  case 0 { z := b } */\n    tag_24:\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":427:428  b */\n      dup4\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":422:428  z := b */\n      swap3\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":341:512  switch n... */\n    tag_23:\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":274:1990  switch x... */\n    tag_11:\n      pop\n        /* \"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":134:2006  function rpow(uint256 x, uint256 n, uint256 b)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_26:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_28:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_29:\n        /* \"#utility.yul\":490:514   */\n      tag_38\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_28\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_39:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_30:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_41\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_29\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_6:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      dup1\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_44\n      tag_26\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":800:919   */\n    tag_43:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_45\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_30\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_46\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_30\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_47\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_30\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1433   */\n    tag_31:\n        /* \"#utility.yul\":1402:1426   */\n      tag_49\n        /* \"#utility.yul\":1420:1425   */\n      dup2\n        /* \"#utility.yul\":1402:1426   */\n      tag_28\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1397:1400   */\n      dup3\n        /* \"#utility.yul\":1390:1427   */\n      mstore\n        /* \"#utility.yul\":1315:1433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1661   */\n    tag_9:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_51\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup5\n        /* \"#utility.yul\":1583:1654   */\n      tag_31\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1439:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c26efa914dfba2e2a1986690023ce2ae2286dc1e21e198414a41bbc3e20fae3464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506101ff8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806367b870af1461002d575b5f80fd5b61004760048036038101906100429190610151565b61005d565b60405161005491906101b0565b60405180910390f35b5f835f81146100fc57600284065f81146100795785925061007d565b8392505b50600283046002850494505b84156100f657858602868782041461009f575f80fd5b818101818110156100ae575f80fd5b858104975060028706156100e95787850285898204141589151516156100d2575f80fd5b838101818110156100e1575f80fd5b878104965050505b5050600285049450610089565b50610112565b835f811461010c575f9250610110565b8392505b505b509392505050565b5f80fd5b5f819050919050565b6101308161011e565b811461013a575f80fd5b50565b5f8135905061014b81610127565b92915050565b5f805f606084860312156101685761016761011a565b5b5f6101758682870161013d565b93505060206101868682870161013d565b92505060406101978682870161013d565b9150509250925092565b6101aa8161011e565b82525050565b5f6020820190506101c35f8301846101a1565b9291505056fea2646970667358221220c26efa914dfba2e2a1986690023ce2ae2286dc1e21e198414a41bbc3e20fae3464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FF DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67B870AF EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 PUSH0 DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x2 DUP5 MOD PUSH0 DUP2 EQ PUSH2 0x79 JUMPI DUP6 SWAP3 POP PUSH2 0x7D JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP PUSH1 0x2 DUP4 DIV PUSH1 0x2 DUP6 DIV SWAP5 POP JUMPDEST DUP5 ISZERO PUSH2 0xF6 JUMPI DUP6 DUP7 MUL DUP7 DUP8 DUP3 DIV EQ PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP2 DIV SWAP8 POP PUSH1 0x2 DUP8 MOD ISZERO PUSH2 0xE9 JUMPI DUP8 DUP6 MUL DUP6 DUP10 DUP3 DIV EQ ISZERO DUP10 ISZERO ISZERO AND ISZERO PUSH2 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 DUP2 DIV SWAP7 POP POP POP JUMPDEST POP POP PUSH1 0x2 DUP6 DIV SWAP5 POP PUSH2 0x89 JUMP JUMPDEST POP PUSH2 0x112 JUMP JUMPDEST DUP4 PUSH0 DUP2 EQ PUSH2 0x10C JUMPI PUSH0 SWAP3 POP PUSH2 0x110 JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130 DUP2 PUSH2 0x11E JUMP JUMPDEST DUP2 EQ PUSH2 0x13A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B DUP2 PUSH2 0x127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH2 0x167 PUSH2 0x11A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x175 DUP7 DUP3 DUP8 ADD PUSH2 0x13D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x186 DUP7 DUP3 DUP8 ADD PUSH2 0x13D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x197 DUP7 DUP3 DUP8 ADD PUSH2 0x13D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1AA DUP2 PUSH2 0x11E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH15 0xFA914DFBA2E2A1986690023CE2AE22 DUP7 0xDC 0x1E 0x21 0xE1 SWAP9 COINBASE 0x4A COINBASE 0xBB 0xC3 0xE2 0xF 0xAE CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "57:1951:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@rpow_14": {
									"entryPoint": 93,
									"id": 14,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1664:1",
										"nodeType": "YulBlock",
										"src": "0:1664:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "790:519:1",
													"nodeType": "YulBlock",
													"src": "790:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:83:1",
																"nodeType": "YulBlock",
																"src": "836:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "838:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:1"
																			},
																			"nativeSrc": "838:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:1"
																		},
																		"nativeSrc": "838:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "811:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "807:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:1"
																		},
																		"nativeSrc": "807:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:1",
																		"nodeType": "YulLiteral",
																		"src": "832:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "803:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:1"
																},
																"nativeSrc": "803:32:1",
																"nodeType": "YulFunctionCall",
																"src": "803:32:1"
															},
															"nativeSrc": "800:119:1",
															"nodeType": "YulIf",
															"src": "800:119:1"
														},
														{
															"nativeSrc": "929:117:1",
															"nodeType": "YulBlock",
															"src": "929:117:1",
															"statements": [
																{
																	"nativeSrc": "944:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "958:1:1",
																		"nodeType": "YulLiteral",
																		"src": "958:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "948:6:1",
																			"nodeType": "YulTypedName",
																			"src": "948:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "973:63:1",
																	"nodeType": "YulAssignment",
																	"src": "973:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1008:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1019:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1004:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:1"
																				},
																				"nativeSrc": "1004:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "983:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:1"
																		},
																		"nativeSrc": "983:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "973:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1056:118:1",
															"nodeType": "YulBlock",
															"src": "1056:118:1",
															"statements": [
																{
																	"nativeSrc": "1071:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1085:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1075:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1101:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1101:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1136:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1147:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1132:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:1"
																				},
																				"nativeSrc": "1132:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1156:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1111:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:1"
																		},
																		"nativeSrc": "1111:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1101:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1184:118:1",
															"nodeType": "YulBlock",
															"src": "1184:118:1",
															"statements": [
																{
																	"nativeSrc": "1199:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1213:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1203:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1229:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1229:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1264:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1275:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1260:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:1"
																				},
																				"nativeSrc": "1260:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1284:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1239:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:1"
																		},
																		"nativeSrc": "1239:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1229:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "690:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "744:9:1",
														"nodeType": "YulTypedName",
														"src": "744:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "755:7:1",
														"nodeType": "YulTypedName",
														"src": "755:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "767:6:1",
														"nodeType": "YulTypedName",
														"src": "767:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "775:6:1",
														"nodeType": "YulTypedName",
														"src": "775:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "783:6:1",
														"nodeType": "YulTypedName",
														"src": "783:6:1",
														"type": ""
													}
												],
												"src": "690:619:1"
											},
											{
												"body": {
													"nativeSrc": "1380:53:1",
													"nodeType": "YulBlock",
													"src": "1380:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1397:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1397:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1420:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1420:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1402:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1402:17:1"
																		},
																		"nativeSrc": "1402:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:1"
																},
																"nativeSrc": "1390:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1390:37:1"
															},
															"nativeSrc": "1390:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1390:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1315:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1368:5:1",
														"nodeType": "YulTypedName",
														"src": "1368:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1375:3:1",
														"nodeType": "YulTypedName",
														"src": "1375:3:1",
														"type": ""
													}
												],
												"src": "1315:118:1"
											},
											{
												"body": {
													"nativeSrc": "1537:124:1",
													"nodeType": "YulBlock",
													"src": "1537:124:1",
													"statements": [
														{
															"nativeSrc": "1547:26:1",
															"nodeType": "YulAssignment",
															"src": "1547:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:1"
																},
																"nativeSrc": "1555:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:1"
																		},
																		"nativeSrc": "1636:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:1"
																},
																"nativeSrc": "1583:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:1"
															},
															"nativeSrc": "1583:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1439:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:1",
														"nodeType": "YulTypedName",
														"src": "1509:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:1",
														"nodeType": "YulTypedName",
														"src": "1521:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:1",
														"nodeType": "YulTypedName",
														"src": "1532:4:1",
														"type": ""
													}
												],
												"src": "1439:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c806367b870af1461002d575b5f80fd5b61004760048036038101906100429190610151565b61005d565b60405161005491906101b0565b60405180910390f35b5f835f81146100fc57600284065f81146100795785925061007d565b8392505b50600283046002850494505b84156100f657858602868782041461009f575f80fd5b818101818110156100ae575f80fd5b858104975060028706156100e95787850285898204141589151516156100d2575f80fd5b838101818110156100e1575f80fd5b878104965050505b5050600285049450610089565b50610112565b835f811461010c575f9250610110565b8392505b505b509392505050565b5f80fd5b5f819050919050565b6101308161011e565b811461013a575f80fd5b50565b5f8135905061014b81610127565b92915050565b5f805f606084860312156101685761016761011a565b5b5f6101758682870161013d565b93505060206101868682870161013d565b92505060406101978682870161013d565b9150509250925092565b6101aa8161011e565b82525050565b5f6020820190506101c35f8301846101a1565b9291505056fea2646970667358221220c26efa914dfba2e2a1986690023ce2ae2286dc1e21e198414a41bbc3e20fae3464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67B870AF EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 PUSH0 DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x2 DUP5 MOD PUSH0 DUP2 EQ PUSH2 0x79 JUMPI DUP6 SWAP3 POP PUSH2 0x7D JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP PUSH1 0x2 DUP4 DIV PUSH1 0x2 DUP6 DIV SWAP5 POP JUMPDEST DUP5 ISZERO PUSH2 0xF6 JUMPI DUP6 DUP7 MUL DUP7 DUP8 DUP3 DIV EQ PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xAE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP2 DIV SWAP8 POP PUSH1 0x2 DUP8 MOD ISZERO PUSH2 0xE9 JUMPI DUP8 DUP6 MUL DUP6 DUP10 DUP3 DIV EQ ISZERO DUP10 ISZERO ISZERO AND ISZERO PUSH2 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP2 ADD DUP2 DUP2 LT ISZERO PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 DUP2 DIV SWAP7 POP POP POP JUMPDEST POP POP PUSH1 0x2 DUP6 DIV SWAP5 POP PUSH2 0x89 JUMP JUMPDEST POP PUSH2 0x112 JUMP JUMPDEST DUP4 PUSH0 DUP2 EQ PUSH2 0x10C JUMPI PUSH0 SWAP3 POP PUSH2 0x110 JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130 DUP2 PUSH2 0x11E JUMP JUMPDEST DUP2 EQ PUSH2 0x13A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B DUP2 PUSH2 0x127 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH2 0x167 PUSH2 0x11A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x175 DUP7 DUP3 DUP8 ADD PUSH2 0x13D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x186 DUP7 DUP3 DUP8 ADD PUSH2 0x13D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x197 DUP7 DUP3 DUP8 ADD PUSH2 0x13D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1AA DUP2 PUSH2 0x11E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH15 0xFA914DFBA2E2A1986690023CE2AE22 DUP7 0xDC 0x1E 0x21 0xE1 SWAP9 COINBASE 0x4A COINBASE 0xBB 0xC3 0xE2 0xF 0xAE CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "57:1951:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;134:1872;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;226:9;281:1;321;316:210;;;;579:1;576;572:9;652:1;647:17;;;;744:1;739:6;;565:182;;647:17;661:1;656:6;;565:182;;784:1;781;777:9;891:1;888;884:9;879:14;;873:1103;896:1;873:1103;;;956:1;953;949:9;1066:1;1062;1058:2;1054:10;1051:17;1041:45;;1082:1;1079;1072:12;1041:45;1175:4;1171:2;1167:13;1279:2;1270:7;1267:15;1264:35;;;1295:1;1292;1285:12;1264:35;1338:1;1329:7;1325:15;1320:20;;1408:1;1405;1401:9;1398:560;;;1454:1;1451;1447:9;1589:1;1585;1581:2;1577:10;1574:17;1567:25;1562:1;1555:9;1548:17;1544:49;1541:121;;;1634:1;1631;1624:12;1541:121;1759:4;1755:2;1751:13;1871:2;1862:7;1859:15;1856:35;;;1887:1;1884;1877:12;1856:35;1934:1;1925:7;1921:15;1916:20;;1411:547;;1398:560;917:1059;;912:1;909;905:9;900:14;;873:1103;;;547:1443;274:1716;;316:210;348:1;418;413:17;;;;509:1;504:6;;341:171;;413:17;427:1;422:6;;341:171;;274:1716;;134:1872;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "102200",
								"executionCost": "145",
								"totalCost": "102345"
							},
							"external": {
								"rpow(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2008,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c26efa914dfba2e2a1986690023ce2ae2286dc1e21e198414a41bbc3e20fae3464736f6c63430008160033",
									".code": [
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "67B870AF"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 134,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 134,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 134,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 316,
											"end": 526,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 316,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 316,
											"end": 526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 579,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 572,
											"end": 581,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 647,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 739,
											"end": 745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 739,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 661,
											"end": 662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 656,
											"end": 662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 656,
											"end": 662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 565,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 565,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 784,
											"end": 785,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 777,
											"end": 786,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 891,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 888,
											"end": 889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 884,
											"end": 893,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 879,
											"end": 893,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 879,
											"end": 893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 896,
											"end": 897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 956,
											"end": 957,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 949,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1064,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1041,
											"end": 1086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1084,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1086,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1041,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1282,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1264,
											"end": 1299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1264,
											"end": 1299,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1264,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1325,
											"end": 1340,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1340,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1410,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1452,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1456,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1587,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1574,
											"end": 1591,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1541,
											"end": 1662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1636,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1662,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1541,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1874,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1856,
											"end": 1891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1891,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1856,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 900,
											"end": 914,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 900,
											"end": 914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 873,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 274,
											"end": 1990,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 526,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 316,
											"end": 526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 349,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 413,
											"end": 430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 413,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 413,
											"end": 430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 509,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 504,
											"end": 510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 341,
											"end": 512,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 430,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 413,
											"end": 430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 422,
											"end": 428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 422,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 341,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1990,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 274,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1402,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Modules/Solidity/76. Assembly Binary Exponentiation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"rpow(uint256,uint256,uint256)": "67b870af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"rpow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":\"AssemblyBinExp\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Modules/Solidity/76. Assembly Binary Exponentiation.sol\":{\"keccak256\":\"0x018edf38d4742e9ed31ec68af75b4b096ac5b01f9d8b92d0945c11c709c6a552\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5440a5f313ee3609cee82ddef0b5237ea9d3320c1653a65cb193107a1cec406\",\"dweb:/ipfs/QmXxMbDKHmMAwx9WWSNNW7voUjFYWx38xGZqwhTCewjh5K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Modules/Solidity/76. Assembly Binary Exponentiation.sol": {
				"ast": {
					"absolutePath": "Modules/Solidity/76. Assembly Binary Exponentiation.sol",
					"exportedSymbols": {
						"AssemblyBinExp": [
							15
						]
					},
					"id": 16,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AssemblyBinExp",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "AssemblyBinExp",
							"nameLocation": "66:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "241:1765:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "260:1740:0",
													"nodeType": "YulBlock",
													"src": "260:1740:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "323:203:0",
																		"nodeType": "YulBlock",
																		"src": "323:203:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nativeSrc": "420:10:0",
																							"nodeType": "YulBlock",
																							"src": "420:10:0",
																							"statements": [
																								{
																									"nativeSrc": "422:6:0",
																									"nodeType": "YulAssignment",
																									"src": "422:6:0",
																									"value": {
																										"name": "b",
																										"nativeSrc": "427:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "427:1:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "422:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "422:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "413:17:0",
																						"nodeType": "YulCase",
																						"src": "413:17:0",
																						"value": {
																							"kind": "number",
																							"nativeSrc": "418:1:0",
																							"nodeType": "YulLiteral",
																							"src": "418:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nativeSrc": "502:10:0",
																							"nodeType": "YulBlock",
																							"src": "502:10:0",
																							"statements": [
																								{
																									"nativeSrc": "504:6:0",
																									"nodeType": "YulAssignment",
																									"src": "504:6:0",
																									"value": {
																										"kind": "number",
																										"nativeSrc": "509:1:0",
																										"nodeType": "YulLiteral",
																										"src": "509:1:0",
																										"type": "",
																										"value": "0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "504:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "504:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "494:18:0",
																						"nodeType": "YulCase",
																						"src": "494:18:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"name": "n",
																					"nativeSrc": "348:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "348:1:0"
																				},
																				"nativeSrc": "341:171:0",
																				"nodeType": "YulSwitch",
																				"src": "341:171:0"
																			}
																		]
																	},
																	"nativeSrc": "316:210:0",
																	"nodeType": "YulCase",
																	"src": "316:210:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "321:1:0",
																		"nodeType": "YulLiteral",
																		"src": "321:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "547:1443:0",
																		"nodeType": "YulBlock",
																		"src": "547:1443:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nativeSrc": "654:10:0",
																							"nodeType": "YulBlock",
																							"src": "654:10:0",
																							"statements": [
																								{
																									"nativeSrc": "656:6:0",
																									"nodeType": "YulAssignment",
																									"src": "656:6:0",
																									"value": {
																										"name": "b",
																										"nativeSrc": "661:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "661:1:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "656:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "656:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "647:17:0",
																						"nodeType": "YulCase",
																						"src": "647:17:0",
																						"value": {
																							"kind": "number",
																							"nativeSrc": "652:1:0",
																							"nodeType": "YulLiteral",
																							"src": "652:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nativeSrc": "737:10:0",
																							"nodeType": "YulBlock",
																							"src": "737:10:0",
																							"statements": [
																								{
																									"nativeSrc": "739:6:0",
																									"nodeType": "YulAssignment",
																									"src": "739:6:0",
																									"value": {
																										"name": "x",
																										"nativeSrc": "744:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "744:1:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nativeSrc": "739:1:0",
																											"nodeType": "YulIdentifier",
																											"src": "739:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nativeSrc": "729:18:0",
																						"nodeType": "YulCase",
																						"src": "729:18:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"name": "n",
																							"nativeSrc": "576:1:0",
																							"nodeType": "YulIdentifier",
																							"src": "576:1:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "579:1:0",
																							"nodeType": "YulLiteral",
																							"src": "579:1:0",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "mod",
																						"nativeSrc": "572:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "572:3:0"
																					},
																					"nativeSrc": "572:9:0",
																					"nodeType": "YulFunctionCall",
																					"src": "572:9:0"
																				},
																				"nativeSrc": "565:182:0",
																				"nodeType": "YulSwitch",
																				"src": "565:182:0"
																			},
																			{
																				"nativeSrc": "765:21:0",
																				"nodeType": "YulVariableDeclaration",
																				"src": "765:21:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "b",
																							"nativeSrc": "781:1:0",
																							"nodeType": "YulIdentifier",
																							"src": "781:1:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "784:1:0",
																							"nodeType": "YulLiteral",
																							"src": "784:1:0",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "777:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "777:3:0"
																					},
																					"nativeSrc": "777:9:0",
																					"nodeType": "YulFunctionCall",
																					"src": "777:9:0"
																				},
																				"variables": [
																					{
																						"name": "half",
																						"nativeSrc": "769:4:0",
																						"nodeType": "YulTypedName",
																						"src": "769:4:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "917:1059:0",
																					"nodeType": "YulBlock",
																					"src": "917:1059:0",
																					"statements": [
																						{
																							"nativeSrc": "939:19:0",
																							"nodeType": "YulVariableDeclaration",
																							"src": "939:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "953:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "953:1:0"
																									},
																									{
																										"name": "x",
																										"nativeSrc": "956:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "956:1:0"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nativeSrc": "949:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "949:3:0"
																								},
																								"nativeSrc": "949:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "949:9:0"
																							},
																							"variables": [
																								{
																									"name": "xx",
																									"nativeSrc": "943:2:0",
																									"nodeType": "YulTypedName",
																									"src": "943:2:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"body": {
																								"nativeSrc": "1070:16:0",
																								"nodeType": "YulBlock",
																								"src": "1070:16:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "1079:1:0",
																													"nodeType": "YulLiteral",
																													"src": "1079:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "1082:1:0",
																													"nodeType": "YulLiteral",
																													"src": "1082:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "1072:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "1072:6:0"
																											},
																											"nativeSrc": "1072:12:0",
																											"nodeType": "YulFunctionCall",
																											"src": "1072:12:0"
																										},
																										"nativeSrc": "1072:12:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "1072:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "xx",
																														"nativeSrc": "1058:2:0",
																														"nodeType": "YulIdentifier",
																														"src": "1058:2:0"
																													},
																													{
																														"name": "x",
																														"nativeSrc": "1062:1:0",
																														"nodeType": "YulIdentifier",
																														"src": "1062:1:0"
																													}
																												],
																												"functionName": {
																													"name": "div",
																													"nativeSrc": "1054:3:0",
																													"nodeType": "YulIdentifier",
																													"src": "1054:3:0"
																												},
																												"nativeSrc": "1054:10:0",
																												"nodeType": "YulFunctionCall",
																												"src": "1054:10:0"
																											},
																											{
																												"name": "x",
																												"nativeSrc": "1066:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "1066:1:0"
																											}
																										],
																										"functionName": {
																											"name": "eq",
																											"nativeSrc": "1051:2:0",
																											"nodeType": "YulIdentifier",
																											"src": "1051:2:0"
																										},
																										"nativeSrc": "1051:17:0",
																										"nodeType": "YulFunctionCall",
																										"src": "1051:17:0"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nativeSrc": "1044:6:0",
																									"nodeType": "YulIdentifier",
																									"src": "1044:6:0"
																								},
																								"nativeSrc": "1044:25:0",
																								"nodeType": "YulFunctionCall",
																								"src": "1044:25:0"
																							},
																							"nativeSrc": "1041:45:0",
																							"nodeType": "YulIf",
																							"src": "1041:45:0"
																						},
																						{
																							"nativeSrc": "1152:28:0",
																							"nodeType": "YulVariableDeclaration",
																							"src": "1152:28:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xx",
																										"nativeSrc": "1171:2:0",
																										"nodeType": "YulIdentifier",
																										"src": "1171:2:0"
																									},
																									{
																										"name": "half",
																										"nativeSrc": "1175:4:0",
																										"nodeType": "YulIdentifier",
																										"src": "1175:4:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1167:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "1167:3:0"
																								},
																								"nativeSrc": "1167:13:0",
																								"nodeType": "YulFunctionCall",
																								"src": "1167:13:0"
																							},
																							"variables": [
																								{
																									"name": "xxRound",
																									"nativeSrc": "1156:7:0",
																									"nodeType": "YulTypedName",
																									"src": "1156:7:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"body": {
																								"nativeSrc": "1283:16:0",
																								"nodeType": "YulBlock",
																								"src": "1283:16:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "1292:1:0",
																													"nodeType": "YulLiteral",
																													"src": "1292:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "1295:1:0",
																													"nodeType": "YulLiteral",
																													"src": "1295:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "1285:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "1285:6:0"
																											},
																											"nativeSrc": "1285:12:0",
																											"nodeType": "YulFunctionCall",
																											"src": "1285:12:0"
																										},
																										"nativeSrc": "1285:12:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "1285:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nativeSrc": "1270:7:0",
																										"nodeType": "YulIdentifier",
																										"src": "1270:7:0"
																									},
																									{
																										"name": "xx",
																										"nativeSrc": "1279:2:0",
																										"nodeType": "YulIdentifier",
																										"src": "1279:2:0"
																									}
																								],
																								"functionName": {
																									"name": "lt",
																									"nativeSrc": "1267:2:0",
																									"nodeType": "YulIdentifier",
																									"src": "1267:2:0"
																								},
																								"nativeSrc": "1267:15:0",
																								"nodeType": "YulFunctionCall",
																								"src": "1267:15:0"
																							},
																							"nativeSrc": "1264:35:0",
																							"nodeType": "YulIf",
																							"src": "1264:35:0"
																						},
																						{
																							"nativeSrc": "1320:20:0",
																							"nodeType": "YulAssignment",
																							"src": "1320:20:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nativeSrc": "1329:7:0",
																										"nodeType": "YulIdentifier",
																										"src": "1329:7:0"
																									},
																									{
																										"name": "b",
																										"nativeSrc": "1338:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "1338:1:0"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "1325:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "1325:3:0"
																								},
																								"nativeSrc": "1325:15:0",
																								"nodeType": "YulFunctionCall",
																								"src": "1325:15:0"
																							},
																							"variableNames": [
																								{
																									"name": "x",
																									"nativeSrc": "1320:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "1320:1:0"
																								}
																							]
																						},
																						{
																							"body": {
																								"nativeSrc": "1411:547:0",
																								"nodeType": "YulBlock",
																								"src": "1411:547:0",
																								"statements": [
																									{
																										"nativeSrc": "1437:19:0",
																										"nodeType": "YulVariableDeclaration",
																										"src": "1437:19:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "z",
																													"nativeSrc": "1451:1:0",
																													"nodeType": "YulIdentifier",
																													"src": "1451:1:0"
																												},
																												{
																													"name": "x",
																													"nativeSrc": "1454:1:0",
																													"nodeType": "YulIdentifier",
																													"src": "1454:1:0"
																												}
																											],
																											"functionName": {
																												"name": "mul",
																												"nativeSrc": "1447:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "1447:3:0"
																											},
																											"nativeSrc": "1447:9:0",
																											"nodeType": "YulFunctionCall",
																											"src": "1447:9:0"
																										},
																										"variables": [
																											{
																												"name": "zx",
																												"nativeSrc": "1441:2:0",
																												"nodeType": "YulTypedName",
																												"src": "1441:2:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nativeSrc": "1594:68:0",
																											"nodeType": "YulBlock",
																											"src": "1594:68:0",
																											"statements": [
																												{
																													"expression": {
																														"arguments": [
																															{
																																"kind": "number",
																																"nativeSrc": "1631:1:0",
																																"nodeType": "YulLiteral",
																																"src": "1631:1:0",
																																"type": "",
																																"value": "0"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "1634:1:0",
																																"nodeType": "YulLiteral",
																																"src": "1634:1:0",
																																"type": "",
																																"value": "0"
																															}
																														],
																														"functionName": {
																															"name": "revert",
																															"nativeSrc": "1624:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "1624:6:0"
																														},
																														"nativeSrc": "1624:12:0",
																														"nodeType": "YulFunctionCall",
																														"src": "1624:12:0"
																													},
																													"nativeSrc": "1624:12:0",
																													"nodeType": "YulExpressionStatement",
																													"src": "1624:12:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "x",
																																	"nativeSrc": "1562:1:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "1562:1:0"
																																}
																															],
																															"functionName": {
																																"name": "iszero",
																																"nativeSrc": "1555:6:0",
																																"nodeType": "YulIdentifier",
																																"src": "1555:6:0"
																															},
																															"nativeSrc": "1555:9:0",
																															"nodeType": "YulFunctionCall",
																															"src": "1555:9:0"
																														}
																													],
																													"functionName": {
																														"name": "iszero",
																														"nativeSrc": "1548:6:0",
																														"nodeType": "YulIdentifier",
																														"src": "1548:6:0"
																													},
																													"nativeSrc": "1548:17:0",
																													"nodeType": "YulFunctionCall",
																													"src": "1548:17:0"
																												},
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "zx",
																																			"nativeSrc": "1581:2:0",
																																			"nodeType": "YulIdentifier",
																																			"src": "1581:2:0"
																																		},
																																		{
																																			"name": "x",
																																			"nativeSrc": "1585:1:0",
																																			"nodeType": "YulIdentifier",
																																			"src": "1585:1:0"
																																		}
																																	],
																																	"functionName": {
																																		"name": "div",
																																		"nativeSrc": "1577:3:0",
																																		"nodeType": "YulIdentifier",
																																		"src": "1577:3:0"
																																	},
																																	"nativeSrc": "1577:10:0",
																																	"nodeType": "YulFunctionCall",
																																	"src": "1577:10:0"
																																},
																																{
																																	"name": "z",
																																	"nativeSrc": "1589:1:0",
																																	"nodeType": "YulIdentifier",
																																	"src": "1589:1:0"
																																}
																															],
																															"functionName": {
																																"name": "eq",
																																"nativeSrc": "1574:2:0",
																																"nodeType": "YulIdentifier",
																																"src": "1574:2:0"
																															},
																															"nativeSrc": "1574:17:0",
																															"nodeType": "YulFunctionCall",
																															"src": "1574:17:0"
																														}
																													],
																													"functionName": {
																														"name": "iszero",
																														"nativeSrc": "1567:6:0",
																														"nodeType": "YulIdentifier",
																														"src": "1567:6:0"
																													},
																													"nativeSrc": "1567:25:0",
																													"nodeType": "YulFunctionCall",
																													"src": "1567:25:0"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nativeSrc": "1544:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "1544:3:0"
																											},
																											"nativeSrc": "1544:49:0",
																											"nodeType": "YulFunctionCall",
																											"src": "1544:49:0"
																										},
																										"nativeSrc": "1541:121:0",
																										"nodeType": "YulIf",
																										"src": "1541:121:0"
																									},
																									{
																										"nativeSrc": "1736:28:0",
																										"nodeType": "YulVariableDeclaration",
																										"src": "1736:28:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zx",
																													"nativeSrc": "1755:2:0",
																													"nodeType": "YulIdentifier",
																													"src": "1755:2:0"
																												},
																												{
																													"name": "half",
																													"nativeSrc": "1759:4:0",
																													"nodeType": "YulIdentifier",
																													"src": "1759:4:0"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "1751:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "1751:3:0"
																											},
																											"nativeSrc": "1751:13:0",
																											"nodeType": "YulFunctionCall",
																											"src": "1751:13:0"
																										},
																										"variables": [
																											{
																												"name": "zxRound",
																												"nativeSrc": "1740:7:0",
																												"nodeType": "YulTypedName",
																												"src": "1740:7:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nativeSrc": "1875:16:0",
																											"nodeType": "YulBlock",
																											"src": "1875:16:0",
																											"statements": [
																												{
																													"expression": {
																														"arguments": [
																															{
																																"kind": "number",
																																"nativeSrc": "1884:1:0",
																																"nodeType": "YulLiteral",
																																"src": "1884:1:0",
																																"type": "",
																																"value": "0"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "1887:1:0",
																																"nodeType": "YulLiteral",
																																"src": "1887:1:0",
																																"type": "",
																																"value": "0"
																															}
																														],
																														"functionName": {
																															"name": "revert",
																															"nativeSrc": "1877:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "1877:6:0"
																														},
																														"nativeSrc": "1877:12:0",
																														"nodeType": "YulFunctionCall",
																														"src": "1877:12:0"
																													},
																													"nativeSrc": "1877:12:0",
																													"nodeType": "YulExpressionStatement",
																													"src": "1877:12:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nativeSrc": "1862:7:0",
																													"nodeType": "YulIdentifier",
																													"src": "1862:7:0"
																												},
																												{
																													"name": "zx",
																													"nativeSrc": "1871:2:0",
																													"nodeType": "YulIdentifier",
																													"src": "1871:2:0"
																												}
																											],
																											"functionName": {
																												"name": "lt",
																												"nativeSrc": "1859:2:0",
																												"nodeType": "YulIdentifier",
																												"src": "1859:2:0"
																											},
																											"nativeSrc": "1859:15:0",
																											"nodeType": "YulFunctionCall",
																											"src": "1859:15:0"
																										},
																										"nativeSrc": "1856:35:0",
																										"nodeType": "YulIf",
																										"src": "1856:35:0"
																									},
																									{
																										"nativeSrc": "1916:20:0",
																										"nodeType": "YulAssignment",
																										"src": "1916:20:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nativeSrc": "1925:7:0",
																													"nodeType": "YulIdentifier",
																													"src": "1925:7:0"
																												},
																												{
																													"name": "b",
																													"nativeSrc": "1934:1:0",
																													"nodeType": "YulIdentifier",
																													"src": "1934:1:0"
																												}
																											],
																											"functionName": {
																												"name": "div",
																												"nativeSrc": "1921:3:0",
																												"nodeType": "YulIdentifier",
																												"src": "1921:3:0"
																											},
																											"nativeSrc": "1921:15:0",
																											"nodeType": "YulFunctionCall",
																											"src": "1921:15:0"
																										},
																										"variableNames": [
																											{
																												"name": "z",
																												"nativeSrc": "1916:1:0",
																												"nodeType": "YulIdentifier",
																												"src": "1916:1:0"
																											}
																										]
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "n",
																										"nativeSrc": "1405:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "1405:1:0"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1408:1:0",
																										"nodeType": "YulLiteral",
																										"src": "1408:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "mod",
																									"nativeSrc": "1401:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "1401:3:0"
																								},
																								"nativeSrc": "1401:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "1401:9:0"
																							},
																							"nativeSrc": "1398:560:0",
																							"nodeType": "YulIf",
																							"src": "1398:560:0"
																						}
																					]
																				},
																				"condition": {
																					"name": "n",
																					"nativeSrc": "896:1:0",
																					"nodeType": "YulIdentifier",
																					"src": "896:1:0"
																				},
																				"nativeSrc": "873:1103:0",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "898:18:0",
																					"nodeType": "YulBlock",
																					"src": "898:18:0",
																					"statements": [
																						{
																							"nativeSrc": "900:14:0",
																							"nodeType": "YulAssignment",
																							"src": "900:14:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "n",
																										"nativeSrc": "909:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "909:1:0"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "912:1:0",
																										"nodeType": "YulLiteral",
																										"src": "912:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "905:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "905:3:0"
																								},
																								"nativeSrc": "905:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "905:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nativeSrc": "900:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "900:1:0"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "877:18:0",
																					"nodeType": "YulBlock",
																					"src": "877:18:0",
																					"statements": [
																						{
																							"nativeSrc": "879:14:0",
																							"nodeType": "YulAssignment",
																							"src": "879:14:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "n",
																										"nativeSrc": "888:1:0",
																										"nodeType": "YulIdentifier",
																										"src": "888:1:0"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "891:1:0",
																										"nodeType": "YulLiteral",
																										"src": "891:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "884:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "884:3:0"
																								},
																								"nativeSrc": "884:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "884:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nativeSrc": "879:1:0",
																									"nodeType": "YulIdentifier",
																									"src": "879:1:0"
																								}
																							]
																						}
																					]
																				},
																				"src": "873:1103:0"
																			}
																		]
																	},
																	"nativeSrc": "539:1451:0",
																	"nodeType": "YulCase",
																	"src": "539:1451:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "x",
																"nativeSrc": "281:1:0",
																"nodeType": "YulIdentifier",
																"src": "281:1:0"
															},
															"nativeSrc": "274:1716:0",
															"nodeType": "YulSwitch",
															"src": "274:1716:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "1338:1:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "1934:1:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "427:1:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "661:1:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "781:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1405:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "348:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "576:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "879:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "888:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "896:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "900:1:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "909:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1062:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1066:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1320:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1454:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1562:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "1585:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "281:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "744:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "953:1:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "956:1:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "1451:1:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "1589:1:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "1916:1:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "422:1:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "504:1:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "656:1:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "739:1:0",
														"valueSize": 1
													}
												],
												"id": 12,
												"nodeType": "InlineAssembly",
												"src": "251:1749:0"
											}
										]
									},
									"functionSelector": "67b870af",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rpow",
									"nameLocation": "143:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "156:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "148:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "167:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "159:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "178:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "170:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "147:33:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "234:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "226:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:11:0"
									},
									"scope": 15,
									"src": "134:1872:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 16,
							"src": "57:1951:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1977:0"
				},
				"id": 0
			}
		}
	}
}